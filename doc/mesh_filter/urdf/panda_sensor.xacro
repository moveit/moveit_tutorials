<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="panda">

  <!-- Include Franka Panda -->
  <xacro:arg name="hand" default="true"/>
  <xacro:arg name="gazebo" default="true"/>
  <xacro:arg name="arm_id" default="panda"/>
  <xacro:arg name="x" default="0"/>
  <xacro:arg name="y" default="0"/>
  <xacro:arg name="z" default="0"/>
  <xacro:arg name="roll" default="0"/>
  <xacro:arg name="pitch" default="0"/>
  <xacro:arg name="yaw" default="0"/>
  <xacro:include filename="$(find franka_description)/robots/panda/panda.urdf.xacro"/>

  <!-- Define the grey material -->
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

<!-- Attach Kinect to world -->
  <joint type="fixed" name="world_camera_joint">
    <origin xyz="0.15 -1 0.5" rpy="0 0 1.57"/>
    <child link="camera_rgb_frame"/>
    <parent link="world"/>
    <axis xyz="0 0 0" rpy="0 0 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>

  <link name="camera_rgb_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>

  <link name="camera_rgb_optical_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.031 -0.0 -0.016"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://moveit_tutorials/doc/mesh_filter/meshes/kinect.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.07271 0.27794 0.073"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch
     files. However, for Gazebo simulation we need them, so we add them here.
     (Hence, don't publish them additionally!) -->

  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_depth_frame"/>
  </joint>

  <link name="camera_depth_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>

  <link name="camera_depth_optical_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <!-- GAZEBO PLUGIN -->
  <!-- Left/Depth camera -->
  <gazebo reference="camera_link">
    <material> Gazebo/DarkGrey </material>
  </gazebo>

  <gazebo reference="camera_depth_frame">
    <sensor type="depth" name="kinect_camera">
      <always_on>true</always_on>
      <update_rate>15.0</update_rate>
      <visualize>false</visualize>
      <camera name="kinect_camera">
        <horizontal_fov>1.7633</horizontal_fov>
        <image>
          <height>720</height>
          <width>1280</width>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>

      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>camera_ir</cameraName>
        <imageTopicName>left/image_rect_color</imageTopicName>
        <imageTopicName>/camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
</robot>

